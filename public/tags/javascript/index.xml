<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on 每天进步一点点</title>
    <link>https://blog.syzh.fun/tags/javascript/</link>
    <description>Recent content in JavaScript on 每天进步一点点</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 26 Jul 2020 16:54:06 +0800</lastBuildDate><atom:link href="https://blog.syzh.fun/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前端异步解决方案总结</title>
      <link>https://blog.syzh.fun/posts/hxd/front-end-async-a9c14713e59f4677b6d2d9066b32f593/</link>
      <pubDate>Sun, 26 Jul 2020 16:54:06 +0800</pubDate>
      
      <guid>https://blog.syzh.fun/posts/hxd/front-end-async-a9c14713e59f4677b6d2d9066b32f593/</guid>
      <description>在最近一段时间的面试中，前端异步解决方案是一个高频面试题，在此做一个总结回顾。 一、首先从概念上理解，什么是同步异步？ 同步和异步是从消息通知机</description>
    </item>
    
    <item>
      <title>JavaScript的继承总结</title>
      <link>https://blog.syzh.fun/posts/hxd/js-inheritance/</link>
      <pubDate>Sun, 24 May 2020 12:00:06 +0800</pubDate>
      
      <guid>https://blog.syzh.fun/posts/hxd/js-inheritance/</guid>
      <description>js的继承总结 本质都是原型链，设置子类的prototype，应用的时候实例属性定义在实例上，通用方法定义在原型链上，达到较好的复用和扩展效果</description>
    </item>
    
  </channel>
</rss>
